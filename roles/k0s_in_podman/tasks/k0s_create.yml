---
- name: Create k0s in Podman block
  block:
    - name: 'Install the kubernetes Python Module'
      ansible.builtin.pip:
        name: kubernetes
        state: present

    - name: 'Pull k0s image'
      containers.podman.podman_image:
        name: docker.io/k0sproject/k0s
        tag: latest
        state: present

    - name: 'Create Podman Volume for k0s-controller'
      containers.podman.podman_volume:
        name: k0s-controller
        state: present

    - name: 'Run k0s in a Podman Container'
      containers.podman.podman_container:
        name: k0s
        image: docker.io/k0sproject/k0s:latest
        cgroupns: host
        hostname: k0s
        name: k0s
        privileged: true
        publish:
          - 6443:6443
        state: started
        volume:
          - 'k0s-controller:/var/lib/k0s'
          - '/sys/fs/cgroup:/sys/fs/cgroup:rw'

    - name: 'Wait for the k0s-controller to start up'
      ansible.builtin.pause:
        minutes: 1

    - name: 'Get k0s cluster token'
      ansible.builtin.command:
        cmd: podman exec -t -i k0s k0s token create --role=worker
      register: worker_token

    - name: output token
      ansible.builtin.debug:
        msg: '{{ worker_token }}'

    - name: 'Create Podman Volume for k0s-worker1'
      containers.podman.podman_volume:
        name: k0s-worker1
        state: present

    - name: 'Run k0s-worker1 in a Podman Container'
      containers.podman.podman_container:
        name: k0s-worker1
        image: docker.io/k0sproject/k0s:latest
        cgroupns: host
        hostname: k0s-worker1
        name: k0s-worker1
        privileged: true
        publish:
          - 31234:31234
        state: started
        volume:
          - 'k0s-worker1:/var/lib/k0s'
          - '/sys/fs/cgroup:/sys/fs/cgroup:rw'
        command: 'k0s worker {{ worker_token.stdout }}'

    - name: 'Wait for k0s-worker1 to start up'
      ansible.builtin.pause:
        minutes: 1

    - name: 'Capture k0s admin config'
      ansible.builtin.command:
        cmd: podman exec k0s cat /var/lib/k0s/pki/admin.conf
      register: kube_config

    - name: 'Write the k0s.kubeconfig'
      ansible.builtin.copy:
        content: '{{ kube_config.stdout }}'
        dest: k0s.kubeconfig

    - name: 'Apply Kube Manifests for the Deployment'
      kubernetes.core.k8s:
        kubeconfig: 'k0s.kubeconfig'
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-deployment
            namespace: default
            labels:
              app: nginx
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: nginx
          template:
            metadata:
              labels:
                app: nginx
            spec:
              containers:
                - name: nginx
                  image: docker.io/library/nginx:1.14.2
                  ports:
                    - containerPort: 80
                      name: http-nginx-web
        state: present

    - name: 'Apply Kube Manifests for the Service'
      kubernetes.core.k8s:
        kubeconfig: 'k0s.kubeconfig'
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-service
            namespace: default
            labels:
              service: nginx
          spec:
            type: NodePort
            selector:
              app: nginx
            ports:
              - protocol: TCP
                port: 9876
                targetPort: http-nginx-web
                nodePort: 31234
        state: present

  become: true
  become_user: root
  become_method: sudo
...
